/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var share_topic_pb = require('../share/topic_pb.js');
var reply_reply_pb = require('../reply/reply_pb.js');
goog.exportSymbol('proto.user.UserDetail', null, global);
goog.exportSymbol('proto.user.UserEntity', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.user.UserEntity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.user.UserEntity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.user.UserEntity.displayName = 'proto.user.UserEntity';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.user.UserEntity.prototype.toObject = function(opt_includeInstance) {
  return proto.user.UserEntity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.user.UserEntity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.UserEntity.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    loginname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    avatarUrl: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.user.UserEntity}
 */
proto.user.UserEntity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.user.UserEntity;
  return proto.user.UserEntity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.user.UserEntity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.user.UserEntity}
 */
proto.user.UserEntity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatarUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.user.UserEntity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.user.UserEntity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.user.UserEntity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.UserEntity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLoginname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAvatarUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.user.UserEntity.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.user.UserEntity.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string loginname = 2;
 * @return {string}
 */
proto.user.UserEntity.prototype.getLoginname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.user.UserEntity.prototype.setLoginname = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string avatar_url = 3;
 * @return {string}
 */
proto.user.UserEntity.prototype.getAvatarUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.user.UserEntity.prototype.setAvatarUrl = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.user.UserDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.user.UserDetail.repeatedFields_, null);
};
goog.inherits(proto.user.UserDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.user.UserDetail.displayName = 'proto.user.UserDetail';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.user.UserDetail.repeatedFields_ = [6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.user.UserDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.user.UserDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.user.UserDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.UserDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    loginname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    avatarUrl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    githubusername: jspb.Message.getFieldWithDefault(msg, 3, ""),
    createAt: jspb.Message.getFieldWithDefault(msg, 4, ""),
    score: jspb.Message.getFieldWithDefault(msg, 5, 0),
    recentTopicsList: jspb.Message.toObjectList(msg.getRecentTopicsList(),
    share_topic_pb.TopicBase.toObject, includeInstance),
    recentRepliesList: jspb.Message.toObjectList(msg.getRecentRepliesList(),
    reply_reply_pb.RecentReply.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.user.UserDetail}
 */
proto.user.UserDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.user.UserDetail;
  return proto.user.UserDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.user.UserDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.user.UserDetail}
 */
proto.user.UserDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatarUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGithubusername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateAt(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScore(value);
      break;
    case 6:
      var value = new share_topic_pb.TopicBase;
      reader.readMessage(value,share_topic_pb.TopicBase.deserializeBinaryFromReader);
      msg.addRecentTopics(value);
      break;
    case 7:
      var value = new reply_reply_pb.RecentReply;
      reader.readMessage(value,reply_reply_pb.RecentReply.deserializeBinaryFromReader);
      msg.addRecentReplies(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.user.UserDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.user.UserDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.user.UserDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.UserDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLoginname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAvatarUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGithubusername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreateAt();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getRecentTopicsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      share_topic_pb.TopicBase.serializeBinaryToWriter
    );
  }
  f = message.getRecentRepliesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      reply_reply_pb.RecentReply.serializeBinaryToWriter
    );
  }
};


/**
 * optional string loginname = 1;
 * @return {string}
 */
proto.user.UserDetail.prototype.getLoginname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.user.UserDetail.prototype.setLoginname = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string avatar_url = 2;
 * @return {string}
 */
proto.user.UserDetail.prototype.getAvatarUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.user.UserDetail.prototype.setAvatarUrl = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string githubUsername = 3;
 * @return {string}
 */
proto.user.UserDetail.prototype.getGithubusername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.user.UserDetail.prototype.setGithubusername = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string create_at = 4;
 * @return {string}
 */
proto.user.UserDetail.prototype.getCreateAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.user.UserDetail.prototype.setCreateAt = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional int32 score = 5;
 * @return {number}
 */
proto.user.UserDetail.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.user.UserDetail.prototype.setScore = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * repeated share.TopicBase recent_topics = 6;
 * @return {!Array.<!proto.share.TopicBase>}
 */
proto.user.UserDetail.prototype.getRecentTopicsList = function() {
  return /** @type{!Array.<!proto.share.TopicBase>} */ (
    jspb.Message.getRepeatedWrapperField(this, share_topic_pb.TopicBase, 6));
};


/** @param {!Array.<!proto.share.TopicBase>} value */
proto.user.UserDetail.prototype.setRecentTopicsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.share.TopicBase=} opt_value
 * @param {number=} opt_index
 * @return {!proto.share.TopicBase}
 */
proto.user.UserDetail.prototype.addRecentTopics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.share.TopicBase, opt_index);
};


proto.user.UserDetail.prototype.clearRecentTopicsList = function() {
  this.setRecentTopicsList([]);
};


/**
 * repeated reply.RecentReply recent_replies = 7;
 * @return {!Array.<!proto.reply.RecentReply>}
 */
proto.user.UserDetail.prototype.getRecentRepliesList = function() {
  return /** @type{!Array.<!proto.reply.RecentReply>} */ (
    jspb.Message.getRepeatedWrapperField(this, reply_reply_pb.RecentReply, 7));
};


/** @param {!Array.<!proto.reply.RecentReply>} value */
proto.user.UserDetail.prototype.setRecentRepliesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.reply.RecentReply=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reply.RecentReply}
 */
proto.user.UserDetail.prototype.addRecentReplies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.reply.RecentReply, opt_index);
};


proto.user.UserDetail.prototype.clearRecentRepliesList = function() {
  this.setRecentRepliesList([]);
};


goog.object.extend(exports, proto.user);
